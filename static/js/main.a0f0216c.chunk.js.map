{"version":3,"sources":["style/utilities.ts","consts/enum.ts","components/Square.tsx","components/HOC/GameContainer.tsx","components/Image.tsx","components/MinesweeperPanel.tsx","functionTool/minesweeper.ts","components/MinesweeperSquare.tsx","components/GameMinesweeper.tsx","style/theme.ts","App.tsx","style/GlobalStyle.ts","reportWebVitals.ts","index.tsx"],"names":["MinesweeperLevel","MapUnitType","clickable","css","borderCSSValue","color","borderWidth","generateSquareBorderCSS","elevatedType","theme","palette","grayLight","grayDark","styled","div","grayNormal","ButtonSquare","Square","Title","p","withGameContainer","Game","levelEnum","GameContainer","props","useState","level","setLevel","Object","values","filter","item","map","levelValue","onClick","img","Panel","MainActionSquare","InfoBox","white","textAlign","MinesweeperPanel","flagAmount","gameResult","onMainActionClick","Image","src","faceImageUrl","isSquareCover","typeValue","Flag","includes","Position","_position","_map","this","xAmount","Math","floor","Top","Left","Right","Bottom","yAmount","LimitIndex","yCorrectionHandler","x","y","getTwoDimensionalPosition","position","getMineAdjacentLevel","minePosition","Mine","adjacentPosition","getAdjacentPosition","mergedPosition","removeDuplicatedValueLength","Set","size","adjacentMineAmount","length","Clear","positionList","filterValidPosition","leftTopOf","topOf","rightTopOf","leftOf","rightOf","leftBottomOf","bottomOf","rightBottomOf","StyledSquare","type","Text","span","colorKey","MinesweeperSquare","onContextMenu","event","preventDefault","NearLevel1","NearLevel2","NearLevel3","NearLevel4","NearLevel5","NearLevel6","NearLevel7","NearLevel8","RenderContent","SquareContainer","levelData","Easy","mineAmount","Normal","Hard","getInitialMap","useCallback","result","index","push","setGameResult","setMinePosition","mapData","setMapData","positionTool","createTool","clickSquareHandler","clickPosition","_minePosition","getInitialMinePosition","previousState","mapDataStack","mineAdjacentLevel","sweepSquareSetMapDataRecursive","positionStack","checkedPositionStack","forEach","showMine","cloneMapData","endGame","useEffect","switchFlagHandler","cloneData","firstClickMapIndex","indexStack","Array","reduce","accumulator","randomIndex","random","splice","sort","a","b","some","clickActionInGame","handler","RenderMinesweeperSquare","black","minesweeperContentNormal","minesweeperContentWarn","minesweeperContentDanger","minesweeperContentDangerDark","App","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f0216c.chunk.js","sourcesContent":["import {css, DefaultTheme} from 'styled-components';\n\nexport const clickable = css`\n  cursor: pointer;\n`\n\n\nconst borderCSSValue = (color: string, borderWidth: number) => {\n  return `${borderWidth}px solid ${color}`;\n}\n\nexport const generateSquareBorderCSS = (elevatedType: 'high' | 'low', theme: DefaultTheme, borderWidth: number = 1) => {\n  if (elevatedType === 'high') {\n    return `\n      border-top: ${borderCSSValue(theme.palette.grayLight, borderWidth)};\n      border-left: ${borderCSSValue(theme.palette.grayLight, borderWidth)};\n      border-right: ${borderCSSValue(theme.palette.grayDark, borderWidth)};\n      border-bottom: ${borderCSSValue(theme.palette.grayDark, borderWidth)};\n    `\n  }\n  if (elevatedType === 'low') {\n    return `\n      border-top: ${borderCSSValue(theme.palette.grayDark, borderWidth)};\n      border-left: ${borderCSSValue(theme.palette.grayDark, borderWidth)};\n      border-right: ${borderCSSValue(theme.palette.grayLight, borderWidth)};\n      border-bottom: ${borderCSSValue(theme.palette.grayLight, borderWidth)};\n    `\n  }\n}\n","export enum MinesweeperLevel {\n  Easy = 0,\n  Normal,\n  Hard,\n}\n\nexport enum MapUnitType {\n  Clear = 0,\n  NearLevel1,\n  NearLevel2,\n  NearLevel3,\n  NearLevel4,\n  NearLevel5,\n  NearLevel6,\n  NearLevel7,\n  NearLevel8,\n  Flag,\n  Mine,\n}\n","import styled from \"styled-components\";\nimport {clickable, generateSquareBorderCSS} from '@/style/utilities';\n\n\nexport default styled.div`\n  ${ ({theme}) => {\n    return `\n      ${generateSquareBorderCSS('high', theme, 3)}\n      background-color: ${theme.palette.grayNormal};\n    `\n  } }\n  ${clickable}\n  width: 25px;\n  height: 25px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`\n\n","import React, {useState, FunctionComponent} from 'react';\nimport styled from 'styled-components';\n\nimport Square from '@/components/Square';\n\nconst ButtonSquare = styled(Square)`\n  width: auto;\n  height: auto;\n  padding: 5px;\n  display: inline-block;\n`\n\nconst Title = styled.p`\n  text-align: center;\n`\n\ntype Enum = {\n  [key: string]: number | string;\n}\ntype WithGameContainer = <L extends Enum>(Game: FunctionComponent<{level: number}>, levelEnum: L) => FunctionComponent;\nconst withGameContainer: WithGameContainer = (Game, levelEnum) => {\n  interface Props {\n    Game: FunctionComponent<{level: number}>;\n  }\n\n  const GameContainer = (props: Props) => {\n    const {Game} = props;\n    const [ level, setLevel ] = useState<number | null>(null);\n\n    const RenderLevelOption = () => {\n      return Object.values(levelEnum)\n        .filter((item) => {\n          return typeof item === 'number';\n        })\n        .map((levelValue) => {\n          return (\n            <ButtonSquare\n              key={levelValue}\n              onClick={() => {\n              setLevel(levelValue as number)\n            }}>{levelEnum[levelValue]}</ButtonSquare>\n          )\n        });\n\n    }\n\n    return (\n      <div>\n        {\n          level === null ? (\n            <>\n              <Title>Select Level To Play !</Title>\n\n              {RenderLevelOption()}\n            </>\n          ) : (\n\n            <Game level={level as number} />\n          )\n        }\n      </div>\n    )\n  }\n\n  return () => {\n    return (\n      <GameContainer Game={Game} />\n    )\n  }\n}\n\nexport default withGameContainer;\n","import styled from \"styled-components\";\n\nexport default styled.img`\n  width: 90%;\n`\n","import React from 'react';\nimport styled from 'styled-components';\nimport Square from '@/components/Square';\nimport {GameResult} from '@/consts/types';\nimport {generateSquareBorderCSS} from '@/style/utilities';\nimport Image from '@/components/Image';\n\nconst Panel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  ${({theme}) => generateSquareBorderCSS('low', theme, 5)}\n  padding: 5px;\n`\n\nconst MainActionSquare = styled(Square)`\n  width: 38px;\n  height: 38px;\n  border-width: 4px;\n  margin: 0 15px;\n`\n\nconst InfoBox = styled.div<{textAlign?: 'center' | 'left' | 'right'}>`\n  min-width: 60px;\n  color: ${({theme}) => theme.palette.white};\n  font-weight: bolder;\n  background-color: #222;\n  ${({theme}) => generateSquareBorderCSS('low', theme, 1)}\n  padding: 3px 6px;\n  text-align: ${ ({textAlign}) => textAlign || 'center'};\n`\n\ninterface Props {\n  flagAmount: number;\n  gameResult: GameResult | null;\n  onMainActionClick: () => void;\n}\nconst MinesweeperPanel = (props: Props) => {\n  const {\n    flagAmount,\n    gameResult,\n    onMainActionClick,\n  } = props;\n\n  const faceImageUrl = () => {\n    switch (gameResult) {\n      case null:\n        return 'https://cdn.shopify.com/s/files/1/1061/1924/files/Slightly_Smiling_Face_Emoji_Icon_60x60.png?16228697460559734940';\n      case 'win':\n        return 'https://cdn.shopify.com/s/files/1/1061/1924/files/Sunglasses_Emoji.png?2976903553660223024';\n      case 'lose':\n        return 'https://cdn.shopify.com/s/files/1/1061/1924/files/Dizzy_Face_Emoji_60x60.png?8026536574188759287';\n    }\n  }\n\n  return (\n    <Panel>\n      <InfoBox textAlign=\"left\">\n        {flagAmount}\n      </InfoBox>\n\n      <MainActionSquare onClick={onMainActionClick}>\n        <Image src={faceImageUrl()} />\n      </MainActionSquare>\n\n      <InfoBox textAlign=\"right\">\n        {/* TODO: timer */}\n        {0}\n      </InfoBox>\n    </Panel>\n  )\n}\n\nexport default MinesweeperPanel;\n","import {MapIndex, MovedIndex, MinesweeperMapData} from '@/consts/types';\nimport {MapUnitType} from '@/consts/enum';\n\n\nexport const isSquareCover = (typeValue: MinesweeperMapData) => {\n  const condition = [MapUnitType.Flag, null];\n\n  return condition.includes(typeValue);\n}\n\nconst filterValidPosition = (positionList: MovedIndex[]): MapIndex[] => {\n  return positionList.filter((position) => position !== null) as MapIndex[];\n}\n\nexport class Position {\n  constructor(private _position: MapIndex, private _map: [number, number]) {}\n  //TODO class content\n  public get value(): MapIndex {\n    return this._position;\n  }\n\n  public get twoDimensionalPosition(): [number, number] {\n    const [xAmount] = this._map;\n\n    return [\n      this._position % xAmount,\n      Math.floor(this._position / xAmount)\n    ] as [number, number];\n  }\n\n  private get LimitIndex() {\n    const [xAmount, yAmount] = this._map;\n\n    return {\n      Top: 0,\n      Left: 0,\n      Right: xAmount,\n      Bottom: yAmount,\n    } as const;\n  }\n\n\n  // static tool\n  public static createTool(map: [number, number]) {\n    const [xAmount, yAmount] = map;\n    const LimitIndex = {\n      Top: 0,\n      Left: 0,\n      Right: xAmount - 1,\n      Bottom: yAmount - 1,\n    } as const;\n\n    const yCorrectionHandler = (x: number, y: number) => {\n      return y * xAmount + x;\n    }\n\n    return {\n      getTwoDimensionalPosition(position: MapIndex): [number, number] {\n        const [xAmount] = map;\n\n        return [\n          position % xAmount,\n          Math.floor(position / xAmount)\n        ] as [number, number];\n      },\n      getMineAdjacentLevel(position: MapIndex, minePosition: MapIndex[]): MapUnitType {\n        if (minePosition.includes(position)) {\n          return MapUnitType.Mine;\n        } else {\n          const adjacentPosition: MapIndex[] = this.getAdjacentPosition(position);\n\n          const mergedPosition = [...minePosition, ...adjacentPosition];\n          const removeDuplicatedValueLength = new Set(mergedPosition).size;\n\n          const adjacentMineAmount = mergedPosition.length - removeDuplicatedValueLength;\n\n          return adjacentMineAmount === 0\n            ? MapUnitType.Clear\n            : MapUnitType[ `NearLevel${ adjacentMineAmount }` as keyof typeof MapUnitType ];\n        }\n      },\n      getAdjacentPosition(position: MapIndex): MapIndex[] {\n        const positionList = [\n          this.leftTopOf(position),    this.topOf(position),       this.rightTopOf(position),\n          this.leftOf(position),                                      this.rightOf(position),\n          this.leftBottomOf(position), this.bottomOf(position), this.rightBottomOf(position),\n        ];\n\n        return filterValidPosition(positionList);\n      },\n      topOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return y === LimitIndex.Top ? null : yCorrectionHandler(x, y - 1);\n      },\n      rightOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Right ? null : yCorrectionHandler(x + 1, y);\n      },\n      bottomOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return y === LimitIndex.Bottom ? null : yCorrectionHandler(x, y + 1);\n      },\n      leftOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Left ? null : yCorrectionHandler(x - 1, y);\n      },\n      leftTopOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Left\n          ? null\n          : y === LimitIndex.Top\n            ? null\n            : yCorrectionHandler(x - 1, y - 1);\n      },\n      leftBottomOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Left\n          ? null\n          : y === LimitIndex.Bottom\n            ? null\n            : yCorrectionHandler(x - 1, y + 1);\n      },\n      rightTopOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Right\n          ? null\n          : y === LimitIndex.Top\n            ? null\n            : yCorrectionHandler(x + 1, y - 1);\n      },\n      rightBottomOf(position: MapIndex): MovedIndex {\n        const [x, y] = this.getTwoDimensionalPosition(position);\n\n        return x === LimitIndex.Right\n          ? null\n          : y === LimitIndex.Bottom\n            ? null\n            : yCorrectionHandler(x + 1, y + 1);\n      },\n    }\n  }\n}\n","import React from 'react';\nimport styled, {DefaultTheme} from \"styled-components\";\nimport {MapUnitType} from '@/consts/enum';\nimport Square from '@/components/Square';\nimport {MinesweeperMapData} from '@/consts/types';\nimport {isSquareCover} from '@/functionTool/minesweeper';\nimport Image from '@/components/Image';\n\nconst StyledSquare = styled(Square)<{ type: MinesweeperMapData }>`\n  font-size: 14px;\n  ${({type, theme}) => {\n    return isSquareCover(type) \n      ?  ''\n      : `border: 1px solid ${theme.palette.grayLight};`;\n  }}\n  ${({type}) => type === MapUnitType.Flag ? 'cursor: default;' : ''}\n`\n\nconst Text = styled.span<{colorKey: keyof DefaultTheme['palette']}>`\n  color: ${({theme, colorKey}) => theme.palette[colorKey]};\n  font-weight: bolder;\n  font-size: 17px;\n`\n\ninterface Props {\n  type: MinesweeperMapData;\n  onClick: () => void;\n  onContextMenu: () => void;\n}\nconst MinesweeperSquare = (props: Props) => {\n  const {type, onClick, onContextMenu} = props;\n\n  const clickHandler = () => {\n    if (type !== MapUnitType.Flag) {\n      onClick();\n    }\n  }\n\n  const clickContextMenuHandler = (event: any) => {\n    if (event.type === 'contextmenu') {\n      event.preventDefault();\n\n      if (isSquareCover(type)) {\n        onContextMenu();\n      }\n    }\n  }\n\n  const RenderContent = () => {\n    switch (type) {\n      case null:\n      case MapUnitType.Clear:\n        return;\n      case MapUnitType.NearLevel1:\n        return <Text colorKey=\"minesweeperContentNormal\">{type}</Text>;\n      case MapUnitType.NearLevel2:\n        return <Text colorKey=\"minesweeperContentWarn\">{type}</Text>;\n      case MapUnitType.NearLevel3:\n      case MapUnitType.NearLevel4:\n      case MapUnitType.NearLevel5:\n      case MapUnitType.NearLevel6:\n      case MapUnitType.NearLevel7:\n      case MapUnitType.NearLevel8:\n        return <Text colorKey=\"minesweeperContentDanger\">{type}</Text>;\n      case MapUnitType.Flag:\n        return <Image src=\"https://cdn.shopify.com/s/files/1/1061/1924/files/Red_Pin_Emoji_60x60.png?5754029179590811720\" />;\n      case MapUnitType.Mine:\n        return <Image src=\"https://cdn.shopify.com/s/files/1/1061/1924/files/Poop_Emoji.png?6135488989279264585\" />;\n    }\n  }\n\n  return (\n    <StyledSquare\n      type={type}\n      onClick={clickHandler}\n      onContextMenu={clickContextMenuHandler}\n    >\n      {RenderContent()}\n    </StyledSquare>\n  )\n}\n\nexport default MinesweeperSquare;\n","import React, {useState, useEffect, useCallback} from 'react';\nimport styled from 'styled-components';\nimport {generateSquareBorderCSS} from '@/style/utilities';\nimport {MinesweeperLevel, MapUnitType} from '@/consts/enum';\nimport {MinesweeperMapData, MapIndex, GameResult} from '@/consts/types';\nimport withGameContainer from '@/components/HOC/GameContainer';\nimport MinesweeperPanel from '@/components/MinesweeperPanel';\nimport MinesweeperSquare from '@/components/MinesweeperSquare';\nimport {Position, isSquareCover} from '@/functionTool/minesweeper';\n\n\nconst squareUnitWidth = 25;\n\nconst GameContainer = styled.div`\n  ${({theme}) => generateSquareBorderCSS('high', theme, 5)}\n  padding: 20px;\n  background-color: ${({theme}) => theme.palette.grayNormal};\n`\n\nconst SquareContainer = styled.div<{xAmount: number}>`\n  margin-top: 10px;\n  width: ${({xAmount}) => xAmount * squareUnitWidth}px;\n  font-size: 0;\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: content-box;\n  ${({theme}) => generateSquareBorderCSS('low', theme, 5)}\n`\n\n\ninterface Props {\n  level: MinesweeperLevel;\n}\nconst GameMinesweeper = (props: Props) => {\n  const { level } = props;\n\n  type GameLevelContent = {\n    map: [number, number];\n    mineAmount: number;\n  }\n  type LevelMapping = {\n    [key: string]: GameLevelContent;\n  }\n  const levelMapping: LevelMapping = {\n    [MinesweeperLevel.Easy]: {\n      map: [9, 9],\n      mineAmount: 10,\n    },\n    [MinesweeperLevel.Normal]: {\n      map: [16, 16],\n      mineAmount: 40,\n    },\n    [MinesweeperLevel.Hard]: {\n      map: [30, 16],\n      mineAmount: 99,\n    },\n  }\n\n  const levelData = levelMapping[level];\n\n\n  const getInitialMap = useCallback((): MinesweeperMapData[] => {\n    const [xAmount, yAmount] = levelData.map;\n\n    const result = [];\n    for (let index = 0; index < xAmount * yAmount; index++) {\n      result.push(null);\n    }\n\n    return result;\n  }, [levelData.map])\n\n\n  const [gameResult, setGameResult] = useState<GameResult | null>(null);\n  const [minePosition, setMinePosition] = useState<MapIndex[]>([]);\n  const [mapData, setMapData] = useState<MinesweeperMapData[]>(() => getInitialMap());\n\n\n\n  const positionTool = Position.createTool(levelData.map);\n  const clickSquareHandler = (clickPosition: MapIndex) => {\n    const _minePosition = minePosition.length > 0\n      ? minePosition\n      : getInitialMinePosition(clickPosition);\n    setMinePosition((previousState) => (\n      previousState.length === 0\n        ? _minePosition\n        : previousState\n    ));\n\n\n    const mapDataStack = [...mapData];\n    const mineAdjacentLevel = positionTool.getMineAdjacentLevel(clickPosition, _minePosition);\n\n    mapDataStack[clickPosition] = mineAdjacentLevel;\n\n    const sweepSquareSetMapDataRecursive = (\n      positionStack: MapIndex[],\n      checkedPositionStack: MapIndex[] = [clickPosition]\n    ) => {\n      positionStack.forEach((position) => {\n        if (!checkedPositionStack.includes(position)) {\n          const mineAdjacentLevel = positionTool.getMineAdjacentLevel(position, _minePosition);\n\n          checkedPositionStack.push(position);\n          mapDataStack[position] = mineAdjacentLevel;\n\n          if (mineAdjacentLevel === MapUnitType.Clear) {\n            sweepSquareSetMapDataRecursive(positionTool.getAdjacentPosition(position), checkedPositionStack);\n          }\n        }\n      })\n    }\n\n    if (mineAdjacentLevel === MapUnitType.Clear) {\n      sweepSquareSetMapDataRecursive(positionTool.getAdjacentPosition(clickPosition))\n    }\n\n    setMapData(mapDataStack);\n  }\n\n  const showMine = useCallback(() => {\n    const cloneMapData = [...mapData];\n\n    minePosition\n      .forEach((position) => {\n        cloneMapData[position] = MapUnitType.Mine;\n      });\n\n    setMapData(cloneMapData);\n  }, [mapData, minePosition])\n\n  const endGame = useCallback((type: 'win' | 'lose') => {\n    if (type === 'lose') {\n      showMine();\n    }\n\n    setGameResult(type);\n  }, [showMine])\n\n  useEffect(() => {\n    if (gameResult) {\n      return;\n    }\n\n    if (mapData.includes(MapUnitType.Mine)) {\n      endGame('lose');\n    }\n\n    const isSweepAllSquare = mapData.filter((type) => isSquareCover(type)).length === minePosition.length;\n    if (isSweepAllSquare) {\n      endGame('win');\n    }\n  }, [mapData, endGame, gameResult, minePosition.length])\n\n\n  const flagAmount = levelData.mineAmount - mapData.filter((mapData) => mapData === MapUnitType.Flag).length;\n  const switchFlagHandler = (position: number) => {\n    if (flagAmount > 0) {\n      const cloneData = [...mapData];\n\n      switch (cloneData[position]) {\n        case null:\n          cloneData[position] = MapUnitType.Flag;\n          break;\n        case MapUnitType.Flag:\n          cloneData[position] = null;\n          break;\n      }\n\n      setMapData(cloneData);\n    }\n  }\n\n\n\n  const RenderMinesweeperSquare = () => {\n    const clickActionInGame = (handler: (position: MapIndex) => void, index: MapIndex) => {\n      return () => {\n        if (gameResult === null) {\n          handler(index);\n        }\n      }\n    }\n\n    return mapData.map((item, index) => {\n      return <MinesweeperSquare\n        key={index}\n        type={item}\n        onClick={clickActionInGame(clickSquareHandler, index)}\n        onContextMenu={clickActionInGame(switchFlagHandler, index)}\n      />\n    })\n  }\n\n  const getInitialMinePosition = (firstClickMapIndex: MapIndex): MapIndex[] => {\n    const indexStack = [] as MapIndex[];\n    for (let index = 0; index < mapData.length; index++) {\n      if (index !== firstClickMapIndex) {\n        indexStack.push(index);\n      }\n    }\n\n    const mineAmount = levelData.mineAmount;\n    return [...new Array(mineAmount)]\n      .reduce((accumulator) => {\n        const randomIndex = Math.floor(Math.random() * indexStack.length);\n\n        return [...accumulator, ...indexStack.splice(randomIndex, 1)]\n      }, [] as MapIndex[])\n      .sort((a: number, b: number) => a - b);\n  }\n\n  const initialGame = () => {\n    setMinePosition([]);\n  };\n  useEffect(() => {\n    if (minePosition.length === 0 && mapData.some((type) => !isSquareCover(type))) {\n      setGameResult(null);\n      setMapData(getInitialMap());\n    }\n  }, [getInitialMap, mapData, minePosition.length]);\n\n\n  return (\n    <GameContainer>\n      <MinesweeperPanel\n        flagAmount={flagAmount}\n        gameResult={gameResult}\n        onMainActionClick={initialGame}\n      />\n\n      <SquareContainer xAmount={levelData.map[0]}>\n        {RenderMinesweeperSquare()}\n      </SquareContainer>\n\n    </GameContainer>\n  )\n}\n\nexport default withGameContainer<typeof MinesweeperLevel>(GameMinesweeper, MinesweeperLevel);\n","import {DefaultTheme} from 'styled-components'\n\nconst theme: DefaultTheme = {\n  palette: {\n    white: '#fff',\n    black: '#000',\n    grayLight: '#d9d9d9',\n    grayNormal: '#c4c4c4',\n    grayDark: '#808080',\n    minesweeperContentNormal: '#1c00ff',\n    minesweeperContentWarn: '#008001',\n    minesweeperContentDanger: '#ff0200',\n    minesweeperContentDangerDark: '#600000',\n  }\n};\n\nexport default theme;\n","import React from 'react';\nimport GameMinesweeper from \"@/components/GameMinesweeper\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"@/style/theme\";\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={ theme }>\n\n      <GameMinesweeper />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100vh;\n  }\n  \n  html {\n    font-family: \"Microsoft JhengHei\", Arial;\n  }\n  \n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  div {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '@/App';\nimport GlobalStyle from \"@/style/GlobalStyle\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}